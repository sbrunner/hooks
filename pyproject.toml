[tool.ruff]
target-version = "py39"
line-length = 110

[tool.ruff.lint.pydocstyle]
convention = "numpy"

[tool.poetry]
version = "0.0.0"

[tool.poetry.dependencies]
python = ">=3.9,<4.0"
PyYAML = "6.0.2"
ruamel-yaml = "0.18.10"
multi-repo-automation = "1.7.0"

[tool.poetry.group.dev.dependencies]
prospector = { version = "1.16.1", extras = ["with_bandit", "with_mypy", "with_pyroma", "with_ruff"] }
prospector-profile-utils = "1.22.3"
prospector-profile-duplicated = "1.10.5"
pytest = "8.3.5"
types-PyYAML = "6.0.12.20250402"

[tool.poetry-dynamic-versioning]
enable = true
vcs = "git"
pattern = "^(?P<base>\\d+(\\.\\d+)*)"
format-jinja = """
{%- if env.get("VERSION_TYPE") == "default_branch" -%}
{{serialize_pep440(bump_version(base, 1), dev=distance)}}
{%- elif env.get("VERSION_TYPE") == "stabilization_branch" -%}
{{serialize_pep440(bump_version(base, 2), dev=distance)}}
{%- elif distance == 0 -%}
{{serialize_pep440(base)}}
{%- else -%}
{{serialize_pep440(bump_version(base), dev=distance)}}
{%- endif -%}
"""

[tool.poetry-plugin-tweak-dependencies-version]
default = "present"

[project]
dynamic = ["dependencies", "version"]
name = "sbrunner-hooks"
description = "Pre commit hook by sbrunner"
readme = "README.md"
keywords = ["pre-commit"]
license = "BSD-2-Clause"
classifiers = [
    'Development Status :: 5 - Production/Stable',
    'Environment :: Console',
    'License :: OSI Approved :: BSD License',
    'Operating System :: OS Independent',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: Python :: 3.13',
    'Typing :: Typed',
]
authors = [{name = "StÃ©phane Brunner",email = "stephane.brunner@gmail.com"}]

[project.urls]
repository = "https://github.com/sbrunner/hooks"
"Bug Tracker" = "https://github.com/sbrunner/hooks/issues"

[project.scripts]
copyright-check = "sbrunner_hooks.copyright:main"
workflow-timeout-check = "sbrunner_hooks.workflow_timeout:main"
run-in-dir = "sbrunner_hooks.run_in_dir:main"
sbrunner-canonicalize = "sbrunner_hooks.canonicalize:main"

[build-system]
requires = ["poetry-core>=1.0.0", "poetry-dynamic-versioning", "poetry-plugin-tweak-dependencies-version", "poetry-plugin-drop-python-upper-constraint"]
build-backend = "poetry.core.masonry.api"
